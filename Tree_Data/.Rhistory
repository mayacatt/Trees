})
abund.SLL.GS$Region <- "SLL"
SLL.site.sp.matrix<- read.csv("output/SLL.site.sp.mat.csv")
str(SLL.site.sp.matrix)
SLL.abund.site<-ddply(SLL.site.sp.matrix, ~X, function(x) {
data.frame(ABUNDANCE_NAT=sum(x[-1]))
})
SLL.abund.site
SLL.abund.site$Region <- "SLL"
sum(SLL.abund.site$ABUNDANCE_SLL)
#ETF subset
ETF.Species <- subset(Dawson.trees.total, Native_ETF=='Y',select=c(Site.Type, Site.Code))
ETF.Species <- ETF.Species %>%
add_count(Site.Code) %>%
distinct() %>%
dplyr::rename("ETF.per.site"=n)
ETF.Species$Region <- "ETF"
View(ETF.Species)
str(Dawson.trees.total)
#ETF / GS TYPE
ETF.sp.matrix<- read.csv("output/ETF.sp.mat.csv")
str(ETF.sp.matrix)
abund.ETF.GS<-ddply(ETF.sp.matrix, ~X, function(x) {
data.frame(ABUNDANCE_NAT=sum(x[-1]))
})
abund.ETF.GS$Region <- "ETF"
ETF.site.sp.matrix<- read.csv("output/ETF.site.sp.mat.csv")
str(ETF.site.sp.matrix)
ETF.abund.site<-ddply(ETF.site.sp.matrix, ~X, function(x) {
data.frame(ABUNDANCE_NAT=sum(x[-1]))
})
ETF.abund.site$Region <- "ETF"
sum(ETF.abund.site$ABUNDANCE_ETF)
#Total trees per site
Trees.per.site <- Dawson.trees.total[,4:5] %>%
add_count(Site.Code) %>%
distinct() %>%
rename("total.per.site"=n)
View(Trees.per.site)
#total trees per greenspace type
tot.sp.matrix<- read.csv("output/total.sp.mat.csv")
str(tot.sp.matrix)
abund.total<-ddply(tot.sp.matrix, ~X, function(x) {
data.frame(ABUNDANCE=sum(x[-1]))
})
abund.total
#total trees per site
site.sp.matrix<- read.csv("output/site.sp.mat.csv")
str(site.sp.matrix)
tot.abund.site<-ddply(site.sp.matrix, ~X, function(x) {
data.frame(ABUNDANCE_TOT=sum(x[-1]))
})
tot.abund.site
SLL.tot.sp.abund <- left_join(tot.abund.site, SLL.abund.site, )
SLL.tot.sp.abund[is.na(SLL.tot.sp.abund)]<-0
SLL.tot.sp.abund$Proportions <- SLL.tot.sp.abund$ABUNDANCE_NAT/SLL.tot.sp.abund$ABUNDANCE_TOT
SLL.tot.sp.abund
describe(SLL.tot.sp.abund$Proportions)
ETF.tot.sp.abund <- left_join(tot.abund.site, ETF.abund.site)
ETF.tot.sp.abund[is.na(ETF.tot.sp.abund)]<-0
ETF.tot.sp.abund$Proportions <- ETF.tot.sp.abund$ABUNDANCE_NAT/ETF.tot.sp.abund$ABUNDANCE_TOT
ETF.tot.sp.abund
describe(ETF.tot.sp.abund$Proportions)
str(ETF.tot.sp.abunp)
str(ETF.tot.sp.abund)
#proportions per site (SLL & ETF)
prop.tot <- rbind(ETF.tot.sp.abund, SLL.tot.sp.abund)
View(prop.tot)
str(ETF.tot.sp.abunp)
str(ETF.tot.sp.abund)
#proportions per site (SLL & ETF)
prop.tot <- left_join(ETF.tot.sp.abund, SLL.tot.sp.abund, by="X")
View(prop.tot)
SLL.Species <- subset(Dawson.trees.total, Native_SLL=='Y', select=c(Site.Type, Site.Code))
SLL.Species <- SLL.Species %>%
add_count(Site.Code) %>%
distinct()
str(SLL.Species)
SLL.Species <- dplyr::rename(SLL.Species, "SLL.per.site"=n)
SLL.Species$Region <- "SLL"
View(SLL.Species)
#SLL / GS TYPE
SLL.sp.matrix<- read.csv("output/SLL.sp.mat.csv")
str(SLL.sp.matrix)
abund.SLL.GS<-ddply(SLL.sp.matrix, ~X, function(x) {
data.frame(ABUNDANCE_SLL=sum(x[-1]))
})
abund.SLL.GS$Region <- "SLL"
SLL.site.sp.matrix<- read.csv("output/SLL.site.sp.mat.csv")
str(SLL.site.sp.matrix)
SLL.abund.site<-ddply(SLL.site.sp.matrix, ~X, function(x) {
data.frame(ABUNDANCE_SLL=sum(x[-1]))
})
SLL.abund.site
SLL.abund.site$Region <- "SLL"
sum(SLL.abund.site$ABUNDANCE_SLL)
#ETF subset
ETF.Species <- subset(Dawson.trees.total, Native_ETF=='Y',select=c(Site.Type, Site.Code))
ETF.Species <- ETF.Species %>%
add_count(Site.Code) %>%
distinct() %>%
dplyr::rename("ETF.per.site"=n)
ETF.Species$Region <- "ETF"
View(ETF.Species)
str(Dawson.trees.total)
#ETF / GS TYPE
ETF.sp.matrix<- read.csv("output/ETF.sp.mat.csv")
str(ETF.sp.matrix)
abund.ETF.GS<-ddply(ETF.sp.matrix, ~X, function(x) {
data.frame(ABUNDANCE_ETF=sum(x[-1]))
})
abund.ETF.GS$Region <- "ETF"
ETF.site.sp.matrix<- read.csv("output/ETF.site.sp.mat.csv")
str(ETF.site.sp.matrix)
ETF.abund.site<-ddply(ETF.site.sp.matrix, ~X, function(x) {
data.frame(ABUNDANCE_ETF=sum(x[-1]))
})
ETF.abund.site$Region <- "ETF"
sum(ETF.abund.site$ABUNDANCE_ETF)
#Total trees per site
Trees.per.site <- Dawson.trees.total[,4:5] %>%
add_count(Site.Code) %>%
distinct() %>%
rename("total.per.site"=n)
View(Trees.per.site)
#total trees per greenspace type
tot.sp.matrix<- read.csv("output/total.sp.mat.csv")
str(tot.sp.matrix)
abund.total<-ddply(tot.sp.matrix, ~X, function(x) {
data.frame(ABUNDANCE=sum(x[-1]))
})
abund.total
#total trees per site
site.sp.matrix<- read.csv("output/site.sp.mat.csv")
str(site.sp.matrix)
tot.abund.site<-ddply(site.sp.matrix, ~X, function(x) {
data.frame(ABUNDANCE_TOT=sum(x[-1]))
})
tot.abund.site
SLL.tot.sp.abund <- left_join(tot.abund.site, SLL.abund.site, )
SLL.tot.sp.abund[is.na(SLL.tot.sp.abund)]<-0
SLL.tot.sp.abund$Proportions <- SLL.tot.sp.abund$ABUNDANCE_SLL/SLL.tot.sp.abund$ABUNDANCE_TOT
SLL.tot.sp.abund
describe(SLL.tot.sp.abund$Proportions)
ETF.tot.sp.abund <- left_join(tot.abund.site, ETF.abund.site)
ETF.tot.sp.abund[is.na(ETF.tot.sp.abund)]<-0
ETF.tot.sp.abund$Proportions <- ETF.tot.sp.abund$ABUNDANCE_ETF/ETF.tot.sp.abund$ABUNDANCE_TOT
ETF.tot.sp.abund
describe(ETF.tot.sp.abund$Proportions)
str(ETF.tot.sp.abund)
#proportions per site (SLL & ETF)
prop.tot <- left_join(ETF.tot.sp.abund, SLL.tot.sp.abund, by="X")
View(prop.tot)
#proportions per site (SLL & ETF)
prop.tot <- left_join(ETF.tot.sp.abund, SLL.tot.sp.abund, by=c("X", "ABUNDANCE_TOT")
View(prop.tot)
#proportions per site (SLL & ETF)
prop.tot <- left_join(ETF.tot.sp.abund, SLL.tot.sp.abund, by=c("X", "ABUNDANCE_TOT")
#proportions per site (SLL & ETF)
prop.tot <- left_join(ETF.tot.sp.abund, SLL.tot.sp.abund, by=c("X", "ABUNDANCE_TOT")
View(prop.tot)
#proportions per site (SLL & ETF)
prop.tot <- left_join(ETF.tot.sp.abund, SLL.tot.sp.abund, by=c("X", "ABUNDANCE_TOT"))
View(prop.tot)
#proportions per site (SLL & ETF)
prop.tot <- left_join(ETF.tot.sp.abund, SLL.tot.sp.abund, by=c("X", "ABUNDANCE_TOT"))
View(prop.tot)
#proportions per site (SLL & ETF)
prop.tot <- left_join(ETF.tot.sp.abund, SLL.tot.sp.abund, by=c("X", "ABUNDANCE_TOT", "Region"))
View(prop.tot)
View(prop.tot)
str(ETF.tot.sp.abund)
#proportions per site (SLL & ETF)
prop.tot <- merge(ETF.tot.sp.abund, SLL.tot.sp.abund)
View(prop.tot)
View(Dawson.proportions)
Dawson.proportions <- merge(SLL.proportions, ETF.proportions, all=TRUE)
SLL.proportions <- left_join(Trees.per.site, SLL.Species)
SLL.proportions[is.na(SLL.proportions)] <- 0
View(Native.proportions)
str(Native.proportions)
SLL.proportions$Proportion <- SLL.proportions$SLL.per.site/SLL.proportions$total.per.site
ETF.proportions <- left_join(Trees.per.site, ETF.Species)
ETF.proportions[is.na(ETF.proportions)] <-0
ETF.proportions$Proportion <- ETF.proportions$ETF.per.site/ETF.proportions$total.per.site
Dawson.proportions <- merge(SLL.proportions, ETF.proportions, all=TRUE)
ETF.tot.sp.abund
#SLL / GS TYPE
SLL.sp.matrix<- read.csv("output/SLL.sp.mat.csv")
str(SLL.sp.matrix)
abund.SLL.GS<-ddply(SLL.sp.matrix, ~X, function(x) {
data.frame(ABUNDANCE_NAT=sum(x[-1]))
})
abund.SLL.GS$Region <- "SLL"
SLL.site.sp.matrix<- read.csv("output/SLL.site.sp.mat.csv")
str(SLL.site.sp.matrix)
SLL.abund.site<-ddply(SLL.site.sp.matrix, ~X, function(x) {
data.frame(ABUNDANCE_NAT=sum(x[-1]))
})
SLL.abund.site
SLL.abund.site$Region <- "SLL"
sum(SLL.abund.site$ABUNDANCE_NAT)
#ETF subset
ETF.Species <- subset(Dawson.trees.total, Native_ETF=='Y',select=c(Site.Type, Site.Code))
ETF.Species <- ETF.Species %>%
add_count(Site.Code) %>%
distinct() %>%
dplyr::rename("ETF.per.site"=n)
ETF.Species$Region <- "ETF"
View(ETF.Species)
str(Dawson.trees.total)
#ETF / GS TYPE
ETF.sp.matrix<- read.csv("output/ETF.sp.mat.csv")
str(ETF.sp.matrix)
abund.ETF.GS<-ddply(ETF.sp.matrix, ~X, function(x) {
data.frame(ABUNDANCE_NAT=sum(x[-1]))
})
abund.ETF.GS$Region <- "ETF"
ETF.site.sp.matrix<- read.csv("output/ETF.site.sp.mat.csv")
str(ETF.site.sp.matrix)
ETF.abund.site<-ddply(ETF.site.sp.matrix, ~X, function(x) {
data.frame(ABUNDANCE_NAT=sum(x[-1]))
})
ETF.abund.site$Region <- "ETF"
sum(ETF.abund.site$ABUNDANCE_NAT)
#Total trees per site
Trees.per.site <- Dawson.trees.total[,4:5] %>%
add_count(Site.Code) %>%
distinct() %>%
rename("total.per.site"=n)
View(Trees.per.site)
#total trees per greenspace type
tot.sp.matrix<- read.csv("output/total.sp.mat.csv")
str(tot.sp.matrix)
abund.total<-ddply(tot.sp.matrix, ~X, function(x) {
data.frame(ABUNDANCE=sum(x[-1]))
})
abund.total
#total trees per site
site.sp.matrix<- read.csv("output/site.sp.mat.csv")
str(site.sp.matrix)
tot.abund.site<-ddply(site.sp.matrix, ~X, function(x) {
data.frame(ABUNDANCE_TOT=sum(x[-1]))
})
tot.abund.site
SLL.tot.sp.abund <- left_join(tot.abund.site, SLL.abund.site, )
SLL.tot.sp.abund[is.na(SLL.tot.sp.abund)]<-0
SLL.tot.sp.abund$Proportions <- SLL.tot.sp.abund$ABUNDANCE_SLL/SLL.tot.sp.abund$ABUNDANCE_TOT
SLL.tot.sp.abund
describe(SLL.tot.sp.abund$Proportions)
SLL.tot.sp.abund <- left_join(tot.abund.site, SLL.abund.site, )
SLL.tot.sp.abund[is.na(SLL.tot.sp.abund)]<-0
SLL.tot.sp.abund$Proportions <- SLL.tot.sp.abund$ABUNDANCE_SLL/SLL.tot.sp.abund$ABUNDANCE_TOT
SLL.tot.sp.abund[is.na(SLL.tot.sp.abund)]<-0
View(SLL.tot.sp.abund)
SLL.tot.sp.abund$Proportions <- SLL.tot.sp.abund$ABUNDANCE_NAT/SLL.tot.sp.abund$ABUNDANCE_TOT
SLL.tot.sp.abund
describe(SLL.tot.sp.abund$Proportions)
ETF.tot.sp.abund <- left_join(tot.abund.site, ETF.abund.site)
ETF.tot.sp.abund[is.na(ETF.tot.sp.abund)]<-0
ETF.tot.sp.abund$Proportions <- ETF.tot.sp.abund$ABUNDANCE_NAT/ETF.tot.sp.abund$ABUNDANCE_TOT
ETF.tot.sp.abund
describe(ETF.tot.sp.abund$Proportions)
str(ETF.tot.sp.abund)
#proportions per site (SLL & ETF)
prop.tot <- rbind(ETF.tot.sp.abund, SLL.tot.sp.abund)
View(prop.tot)
prop.tot <- distinct(prop.tot)
View(prop.tot)
str(prop.tot)
prop.tot <- prop.tot %>%
distinct(prop.tot) %>%
mutate(Region = recode(0="NON-NAT"))
prop.tot <- prop.tot %>%
distinct(prop.tot) %>%
mutate(Region = recode("0"="NON-NAT"))
prop.tot <- prop.tot %>%
distinct() %>%
mutate(Region = recode("0"="NON-NAT"))
prop.tot <- prop.tot %>%
distinct() %>%
mutate(Region = recode("0"="NON-NAT"))
#proportions per site (SLL & ETF)
prop.tot <- rbind(ETF.tot.sp.abund, SLL.tot.sp.abund)
View(prop.tot)
prop.tot <- prop.tot %>%
distinct() %>%
mutate(Region = recode("0"="NON-NAT"))
prop.tot <- prop.tot %>%
distinct()
prop.tot$Region <- recode("0"="NON-NAT"))
prop.tot$Region <- recode("0"="NON-NAT")
prop.tot$Region <- recode(prop.tot$Region, "0"="NON-NAT")
View(prop.tot)
View(list.site.sp.table)
View(prop.tot)
View(SLL.data)
#sp richness/site
site.sp.table <- read.csv("output/site.sp.mat.csv")
per.site.total<-ddply(site.sp.table, ~Var2, function(x) {
data.frame(RICHNESS= sum((x[-1]>0)))
})
per.site.total
#sp richness/site
site.sp.table <- read.csv("output/site.sp.mat.csv")
per.site.total<-ddply(site.sp.table, ~Var2, function(x) {
data.frame(RICHNESS= sum((x[-1]>0)))
})
per.site.total<-ddply(site.sp.table, ~X, function(x) {
data.frame(RICHNESS= sum((x[-1]>0)))
})
per.site.total
#SLL sp richness/site
SLL.site.sp.matrix<- read.csv("output/SLL.site.sp.mat.csv")
str(SLL.site.sp.matrix)
#SLL sp richness/site
SLL.site.sp.matrix<- read.csv("output/SLL.site.sp.mat.csv")
str(SLL.site.sp.matrix)
SLL.per.site.total<-ddply(SLL.site.sp.table, ~X, function(x) {
data.frame(RICHNESS_NAT= sum((x[-1]>0)))
})
#SLL sp richness/site
SLL.site.sp.matrix<- read.csv("output/SLL.site.sp.mat.csv")
str(SLL.site.sp.matrix)
SLL.per.site.total<-ddply(SLL.site.sp.matrix, ~X, function(x) {
data.frame(RICHNESS_NAT= sum((x[-1]>0)))
})
SLL.per.site.total
describe(SLL.per.site.total$RICHNESS)
SLL.rich.prop <- left_join(per.site.total, SLL.per.site.total)
SLL.rich.prop[is.na(SLL.rich.prop$RICHNESS_NAT)] <-0
SLL.rich.prop <- left_join(per.site.total, SLL.per.site.total)
SLL.rich.prop[is.na(SLL.rich.prop)] <-0
SLL.rich.prop$Proportion <- SLL.rich.propl$RICHNESS_NAT/
#sp richness/park
park.sp.table <- read.csv("output/parks.sp.mat.csv")
SLL.rich.prop$Proportion <- SLL.rich.prop$RICHNESS_NAT/SLL.rich.prop$RICHNESS
SLL.rich,prop
SLL.rich.prop
str(SLL.rich.prop)
SLL.rich.prop$GS.Type <- substr(SLL.rich.prop$X, 1,1)
boxplot(Proportion~GS.Type, SLL.rich.prop)
library(ggplot2)
SLL.prop <- ggplot(SLL.rich.prop, aes(GS,Type, Proportion))
SLL.prop
SLL.prop <- ggplot(SLL.rich.prop, aes(GS.Type, Proportion))
SLL.prop
View(SLL.site.sp.mat)
meta.csv <- read.csv("input/metadata.csv")
meta.csv
meta.csv <- read.csv("output/Dawson.Trees.With.Origin.csv")
meta.csv
str(meta.csv)
meta.csv <- meta.csv[-c("X", "Origin.Source", "Comments")]
meta.csv <- meta.csv[, -c("X", "Origin.Source", "Comments")]
meta.csv <- meta.csv[,2:8, 11, 9, 13:14]
meta.csv <- meta.csv[,c(2:8, 11, 9, 13:14)]
str(meta)
meta <- read.csv("output/Dawson.Trees.With.Origin.csv")
meta <- meta.csv[,c(2:8, 11, 9, 13:14)]
meta <- meta[,c(2:8, 11, 9, 13:14)]
str(meta)
meta <- read.csv("output/Dawson.Trees.With.Origin.csv")
str(meta)
meta <- meta[,c(2:9, 11, 10, 13:14)]
str(meta)
meta <- read.csv("output/Dawson.Trees.With.Origin.csv")
str(meta)
meta <- meta[,c(2:9, 10, 13:14)]
str(meta)
Sites <- meta[, c(1:4)]
SLL.prop
View(SLL.rich.prop)
str(SLL.rich.prop)
SLL.rich.prop
SLL.rich.prop$Region <- "SLL"
#ETF richness / site
ETF.rich.prop <- left_join(per.site.total, ETF.per.site.total)
ETF.rich.prop[is.na(ETF.rich.prop)] <-0
ETF.rich.prop$Proportion <- ETF.rich.prop$RICHNESS_NAT/ETF.rich.prop$RICHNESS
#SETF sp richness/site
ETF.site.sp.matrix<- read.csv("output/ETF.site.sp.mat.csv")
str(ETF.site.sp.matrix)
ETF.per.site.total<-ddply(ETF.site.sp.matrix, ~X, function(x) {
data.frame(RICHNESS_NAT= sum((x[-1]>0)))
})
ETF.per.site.total
describe(ETF.per.site.total$RICHNESS)
#ETF richness / site
ETF.rich.prop <- left_join(per.site.total, ETF.per.site.total)
ETF.rich.prop[is.na(ETF.rich.prop)] <-0
ETF.rich.prop$Proportion <- ETF.rich.prop$RICHNESS_NAT/ETF.rich.prop$RICHNESS
ETF.rich.prop$GS.Type <- substr(ETF.rich.prop$X, 1,1)
ETF.rich.prop$Region <- "ETF"
str(ETF.rich.prop)
ETF.rich.prop <- left_join(per.site.total, ETF.per.site.total)
ETF.rich.prop[is.na(ETF.rich.prop)] <-0
ETF.rich.prop$Proportion <- ETF.rich.prop$RICHNESS_NAT/ETF.rich.prop$RICHNESS
ETF.rich.prop$GS.Type <- substr(ETF.rich.prop$X, 1,1)
ETF.rich.prop$Region <- "ETF"
str(SLL.rich.prop)
prop.rich.tot <- rbind(ETF.rich,prop, SLL.rich,prop)
prop.rich.tot <- rbind(ETF.rich.prop, SLL.rich,prop)
prop.rich.tot <- rbind(ETF.rich.prop, SLL.rich.prop)
View(prop.rich.tot)
prop.rich.tot <- prop.rich.tot %>%
distinct()
prop.rich.tot$Region <- recode(prop.rich.tot$Region, "0"="NON-NAT")
View(prop.tot)
View(prop.rich.tot)
prop.rich.tot <- prop.rich.tot %>%
distinct() %>%
mutate(X=rename(X=Site.Code))
prop.rich.tot <- prop.rich.tot %>%
distinct() %>%
mutate(X=dplyr::rename(X=Site.Code))
prop.rich.tot <- prop.rich.tot %>%
distinct() %>%
mutate(X=dplyr::rename("Site.Code"=X))
prop.rich.tot <- prop.rich.tot %>%
distinct() %>%
mutate(X=dplyr::rename(X="Site.Code"))
View(list.total.sp.table)
prop.rich.tot <- dplyr::rename(prop.rich.tot, X="Site.Code"))
prop.rich.tot <- dplyr::rename(prop.rich.tot, X="Site.Code")
prop.rich.tot <- dplyr::rename(prop.rich.tot, "Site.Code"=X)
prop.rich.tot$Region <- recode(prop.rich.tot$Region, "0"="NON-NAT")
View(prop.rich.tot)
SLL.rich.prop <- left_join(per.site.total, SLL.per.site.total)
SLL.rich.prop[is.na(SLL.rich.prop)] <-0
SLL.rich.prop$Proportion <- SLL.rich.prop$RICHNESS_NAT/SLL.rich.prop$RICHNESS
SLL.rich.prop$Site.Type <- substr(SLL.rich.prop$X, 1,1)
SLL.rich.prop$Region <- "SLL"
str(SLL.rich.prop)
boxplot(Proportion~Site.Type, SLL.rich.prop
title="Native SLL Proportion per Green Space Type")
library(ggplot2)
SLL.prop <- ggplot(SLL.rich.prop, aes(Site.Type, Proportion))
SLL.prop
#ETF sp richness/site
ETF.site.sp.matrix<- read.csv("output/ETF.site.sp.mat.csv")
str(ETF.site.sp.matrix)
ETF.per.site.total<-ddply(ETF.site.sp.matrix, ~X, function(x) {
data.frame(RICHNESS_NAT= sum((x[-1]>0)))
})
ETF.per.site.total
describe(ETF.per.site.total$RICHNESS)
#ETF richness / site
ETF.rich.prop <- left_join(per.site.total, ETF.per.site.total)
ETF.rich.prop[is.na(ETF.rich.prop)] <-0
ETF.rich.prop$Proportion <- ETF.rich.prop$RICHNESS_NAT/ETF.rich.prop$RICHNESS
ETF.rich.prop$Site.Type <- substr(ETF.rich.prop$X, 1,1)
ETF.rich.prop$Region <- "ETF"
str(ETF.rich.prop)
ETF.rich.prop <- left_join(per.site.total, ETF.per.site.total)
ETF.rich.prop[is.na(ETF.rich.prop)] <-0
ETF.rich.prop$Proportion <- ETF.rich.prop$RICHNESS_NAT/ETF.rich.prop$RICHNESS
ETF.rich.prop$Site.Type <- substr(ETF.rich.prop$X, 1,1)
ETF.rich.prop$Region <- "ETF"
str(SLL.rich.prop)
prop.rich.tot <- rbind(ETF.rich.prop, SLL.rich.prop)
View(prop.rich.tot)
prop.rich.tot <- prop.rich.tot %>%
distinct()
prop.rich.tot <- dplyr::rename(prop.rich.tot, "Site.Code"=X)
prop.rich.tot$Region <- recode(prop.rich.tot$Region, "0"="NON-NAT")
View(prop.rich.tot)
write.csv("output/prop.rich.tot.csv")
Site.Rich <- read.csv("output/prop.rich.tot.csv")
write.csv("output/prop.rich.tot.csv")
setwd("~/Documents/GitHub/Trees/Tree_Data")
View(prop.rich.tot)
write.csv(prop.rich.tot, "output/prop.rich.tot.csv")
Site.Rich <- read.csv("output/prop.rich.tot.csv")
View(prop.tot)
write.csv(prop.tot, "output/prop.abund.tot.csv")
Sites.Abund <- read.csv("output/prop.abund.tot.csv")
Meta.Final <- left_join(Sites, Sites.Rich)
Site.Rich <- read.csv("output/prop.rich.tot.csv")
Sites.Abund <- read.csv("output/prop.abund.tot.csv")
Meta.Final <- left_join(Sites, Sites.Rich)
Meta.Final <- left_join(Sites, Site.Rich)
Meta.Final
Meta.Final <- left_join(Meta.Final, Sites.Abund)
Meta.Final
str(Meta.Final)
Meta.Final <- subset(-c("X"))
Meta.Final <- subset(Meta.Final, select = -c("X"))
Meta.Final <- subset(Meta.Final, select = -c(X))
str(Meta.Final)
Meta.Final <- left_join(Meta.Final, Sites.Abund)
View(Meta.Final)
str(Site.Rich)
Meta.Final <- left_join(Sites, Site.Rich)
str(Sites.Abund)
Sites.Abund <- dplyr::rename(Sites.Abund, X="Site.Code")
Sites.Abund <- dplyr::rename(Sites.Abund, "Site.Code"=X)
str(Sites.Abund)
Sites.Abund <- subset(Sites.Abund, select = -c(X.1))
Meta.Final <- left_join(Sites, Site.Rich)
Meta.Final
str(Meta.Final)
Meta.Final <- subset(Meta.Final, select = -c(X))
Meta.Final <- left_join(Meta.Final, Sites.Abund)
View(Meta.Final)
str(Meta.Final)
Meta.Final[, c(1:4, 8, 5:7, 9:11)]
View(Meta.Final)
Meta.Final <- Meta.Final[, c(1:4, 8, 5:7, 9:11)]
View(Meta.Final)
View(Sites.Abund)
write.csv(Meta.Final, "output/meta.analysis.csv")
