#subet only the top five most abundant species
top.5.private<- all.private.ab %>% slice(1:5)
top.5.private
#institutions
insti.ab <- subset(meta.sp.table, Var2=="I")
insti.ab<-insti.ab[apply(insti.ab!=0, 1, all),]
insti.ab <- insti.ab[order(insti.ab$Freq, decreasing=TRUE),]
sum(insti.ab$Freq)
insti.ab$per.abund <- (insti.ab$Freq/513)*100
top.5.inst <- insti.ab %>% slice(1:5)
top.5.inst
#residential
res.ab <- subset(meta.sp.table, Var2=="Y")
res.ab<-res.ab[apply(res.ab!=0, 1, all),]
res.ab <- res.ab[order(res.ab$Freq, decreasing=TRUE),]
sum(res.ab$Freq)
res.ab$per.abund <- (res.ab$Freq/971)*100
top.5.res <- res.ab %>% slice(1:5)
top.5.res
#Public
#Create public file by subsetting only public land classification
all.public.ab<- subset(class.table, Var2=="Public")
#removing zeros so that trees that are not present are not included in calculation
all.public.ab<- all.public.ab[apply(all.public.ab!=0, 1, all),]
all.public.ab<- all.public.ab[order(all.public.ab$Freq, decreasing = TRUE),]
#finding total number of trees for percent abundance calculation
sum(all.public.ab$Freq)
#calculate percent abundance of each species and create a new column
all.public.ab$per.abund<- (all.public.ab$Freq/964)*100
all.public.ab
#subset only the top five most abundant species
top.5.public<- all.public.ab %>% slice(1:5)
top.5.public
#streets
street.ab <- subset(meta.sp.table, Var2=="S")
street.ab<-street.ab[apply(street.ab!=0, 1, all),]
street.ab <- street.ab[order(street.ab$Freq, decreasing=TRUE),]
sum(street.ab$Freq)
street.ab$per.abund <- (street.ab$Freq/764)*100
top.5.street <- street.ab %>% slice(1:5)
top.5.street
#alleyways
alley.ab <- subset(meta.sp.table, Var2=="A")
alley.ab<-alley.ab[apply(alley.ab!=0, 1, all),]
alley.ab <- alley.ab[order(alley.ab$Freq, decreasing=TRUE),]
sum(alley.ab$Freq)
alley.ab$per.abund <- (alley.ab$Freq/77)*100
top.5.alley <- alley.ab %>% slice(1:5)
top.5.alley
#parcs
parc.ab <- subset(meta.sp.table, Var2=="P")
parc.ab<-parc.ab[apply(parc.ab!=0, 1, all),]
parc.ab <- parc.ab[order(parc.ab$Freq, decreasing=TRUE),]
sum(parc.ab$Freq)
parc.ab$per.abund <- (parc.ab$Freq/126)*100
top.5.parc <- parc.ab %>% slice(1:5)
top.5.parc
####Plotting Figure
##plotting 5 Most Abundant Species in PUBLIC
##create colour palette for figure and abundance labels
top.5.public
colour.table.publicab<- tibble(
GS.Type= c("ACSA", "GLTR", "GYDI", "TICO", "ULMO"),
Colour= c("lightpink","seagreen", "seagreen", "skyblue", "skyblue"))
abundance.labs<- labs(x= "Species Code", y= "Percent Abundance")
Public5<- ggplot(data = top.5.public,
mapping = aes(x= reorder(Var1, -per.abund), y= per.abund, fill= Var1))
Public5.final<- Public5 + geom_col(alpha= 0.7, width= 0.7) + theme_classic() +
abundance.labs + scale_fill_manual(values = colour.table.publicab$Colour) +
theme(legend.position = "none", axis.title = element_text(face= "bold", size= 20), axis.text.x = element_text(size= 18), axis.text.y = element_text(size= 18))
Public5.final
##plotting 5 Most Abundant Species in PRIVATE
#creating a table of colour
top.5.private
sum(top.5.private$per.abund)
sum(top.5.alley$per.abund)
sum(top.5.public$per.abund)
colour.table.privateab<- tibble(
GS.Type= c("ACNE", "ACPL", "FRPE", "GLTR", "THOC"),
Colour= c("seagreen", "skyblue","lightpink", "seagreen", "lightpink"))
Private5<- ggplot(data= top.5.private,
mapping = aes(x= reorder(Var1, -per.abund), y= per.abund, fill= Var1))
Private5.final<-Private5 + geom_col(alpha= 0.7, width = 0.7) + theme_classic()+
abundance.labs + scale_fill_manual(values= colour.table.privateab$Colour) +
theme(legend.position = "none", axis.title = element_text(face= "bold", size= 20), axis.text.x = element_text(size= 18), axis.text.y = element_text(size= 18))
Private5.final
##Arrange public and private plots into one figures
Public.Private5<-ggarrange(Public5.final, Private5.final,
labels = c("A", "B"), font.label = list(size= 18), hjust = -1, vjust= 1.2)
Public.Private5
ggsave("output/public.private.top.5.pdf")
## Private plots
top.5.inst
colour.table.inst.ab<- tibble(
GS.Type= c("ACPL", "FRPE", "PNNI", "THOC", "ULPU"),
Colour= c("skyblue", "lightpink","skyblue", "lightpink", "skyblue"))
Inst5<- ggplot(data= top.5.inst,
mapping = aes(x= reorder(Var1, -per.abund), y= per.abund, fill= Var1))
Inst5.final<-Inst5 + geom_col(alpha= 0.7, width = 0.7)+ theme_classic()+
abundance.labs + scale_fill_manual(values= colour.table.inst.ab$Colour) +
theme(legend.position = "none", axis.title = element_text(face= "bold", size= 20), axis.text.x = element_text(size= 18), axis.text.y = element_text(size= 18))
Inst5.final
top.5.res
colour.table.res.ab<- tibble(
GS.Type= c("ACPL", "ACNE", "GLTR", "SYVU", "THOC"),
Colour= c("skyblue", "seagreen","seagreen", "skyblue", "lightpink"))
Res5<- ggplot(data= top.5.res,
mapping = aes(x= reorder(Var1, -per.abund), y= per.abund, fill= Var1))
Res5.final<-Res5 + geom_col(alpha= 0.7, width = 0.7)+ theme_classic()+
abundance.labs + scale_fill_manual(values= colour.table.res.ab$Colour) +
theme(legend.position = "none", axis.title = element_text(face= "bold", size= 20), axis.text.x = element_text(size= 18), axis.text.y = element_text(size= 18))
Res5.final
Private.GS <-ggarrange(Res5.final, Inst5.final,
labels = c("A", "B"), font.label = list(size= 18), hjust = -1, vjust= 1.2)
Private.GS
###public land
top.5.alley
colour.table.alley.ab<- tibble(
GS.Type= c("ACNE", "PRVI", "THOC", "ULAM", "ULPU"),
Colour= c("seagreen", "lightpink","lightpink", "lightpink", "skyblue"))
Alley5<- ggplot(data= top.5.alley,
mapping = aes(x= reorder(Var1, -per.abund), y= per.abund, fill= Var1))
Alley5.final<-Alley5 + geom_col(alpha= 0.7, width = 0.7)+ theme_classic()+
abundance.labs + scale_fill_manual(values= colour.table.alley.ab$Colour) +
theme(legend.position = "none", axis.title = element_text(face= "bold", size= 20), axis.text.x = element_text(size= 18), axis.text.y = element_text(size= 18))
Alley5.final
top.5.street
colour.table.street.ab<- tibble(
GS.Type= c("ACPL", "ACSA",  "GLTR", "GYDI","ULMO"),
Colour= c("skyblue", "lightpink","seagreen", "seagreen", "skyblue"))
Street5<- ggplot(data= top.5.street,
mapping = aes(x= reorder(Var1, -per.abund), y= per.abund, fill= Var1))
Street5.final<-Street5 + geom_col(alpha= 0.7, width = 0.7)+ theme_classic()+
abundance.labs + scale_fill_manual(values= colour.table.street.ab$Colour) +
theme(legend.position = "none", axis.title = element_text(face= "bold", size= 20), axis.text.x = element_text(size= 18), axis.text.y = element_text(size= 18))
Street5.final
top.5.parc
colour.table.parc.ab<- tibble(
GS.Type= c("ACSA", "GLTR", "MATH", "TIAM","TICO"),
Colour= c("lightpink","seagreen", "skyblue", "lightpink", "skyblue"))
Parc5<- ggplot(data= top.5.parc,
mapping = aes(x= reorder(Var1, -per.abund), y= per.abund, fill= Var1))
Parc5.final<-Parc5 + geom_col(alpha= 0.7, width = 0.7)+ theme_classic()+
abundance.labs + scale_fill_manual(values= colour.table.parc.ab$Colour) +
theme(legend.position = "none", axis.title = element_text(face= "bold", size= 20), axis.text.x = element_text(size= 18), axis.text.y = element_text(size= 18))
Parc5.final
Public.GS <-ggarrange(Street5.final, Alley5.final, Parc5.final, ncol=3,
labels = c("A", "B", "C"), font.label = list(size= 18), hjust = -1, vjust= 1.2)
Public.GS
####Plotting Figure
##plotting 5 Most Abundant Species in PUBLIC
##create colour palette for figure and abundance labels
top.5.public
colour.table.publicab<- tibble(
GS.Type= c("ACSA", "GLTR", "GYDI", "TICO", "ULMO"),
Colour= c("lightpink","seagreen", "seagreen", "skyblue", "skyblue"))
abundance.labs<- labs(x= "Species Code", y= "Percent Abundance")
Public5<- ggplot(data = top.5.public,
mapping = aes(x= reorder(Var1, -per.abund), y= per.abund, fill= Var1))
Public5.final<- Public5 + geom_col(alpha= 0.7, width= 0.7) + theme_classic() +
abundance.labs + scale_fill_manual(values = colour.table.publicab$Colour) +
theme(legend.position = "none", axis.title = element_text(face= "bold", size= 20), axis.text.x = element_text(size= 18), axis.text.y = element_text(size= 18))
Public5.final
##plotting 5 Most Abundant Species in PRIVATE
#creating a table of colour
top.5.private
sum(top.5.private$per.abund)
sum(top.5.alley$per.abund)
sum(top.5.public$per.abund)
colour.table.privateab<- tibble(
GS.Type= c("ACNE", "ACPL", "FRPE", "GLTR", "THOC"),
Colour= c("seagreen", "skyblue","lightpink", "seagreen", "lightpink"))
Private5<- ggplot(data= top.5.private,
mapping = aes(x= reorder(Var1, -per.abund), y= per.abund, fill= Var1))
Private5.final<-Private5 + geom_col(alpha= 0.7, width = 0.7) + theme_classic()+
abundance.labs + scale_fill_manual(values= colour.table.privateab$Colour) +
theme(legend.position = "none", axis.title = element_text(face= "bold", size= 20), axis.text.x = element_text(size= 18), axis.text.y = element_text(size= 18))
Private5.final
##Arrange public and private plots into one figures
Public.Private5<-ggarrange(Public5.final, Private5.final,
labels = c("A", "B"), font.label = list(size= 18), hjust = -1, vjust= 1.2)
Public.Private5
ggsave("output/public.private.top.5.pdf")
Private5.final<-Private5 + geom_col(alpha= 0.7, width = 0.7) + theme_classic()+
abundance.labs + scale_fill_manual(values= colour.table.privateab$Colour) +
theme(axis.title = element_text(face= "bold", size= 20), axis.text.x = element_text(size= 18), axis.text.y = element_text(size= 18))
Private5.final
##Arrange public and private plots into one figures
Public.Private5<-ggarrange(Public5.final, Private5.final,
labels = c("A", "B"), font.label = list(size= 18), hjust = -1, vjust= 1.2)
Public.Private5
colour.table.res.ab<- tibble(
GS.Type= c("ACPL", "ACNE", "GLTR", "SYVU", "THOC"),
Colour= c("skyblue", "seagreen","seagreen", "skyblue", "lightpink"))
Res5<- ggplot(data= top.5.res,
mapping = aes(x= reorder(Var1, -per.abund), y= per.abund, fill= Var1))
Res5.final<-Res5 + geom_col(alpha= 0.7, width = 0.7)+ theme_classic()+
abundance.labs + scale_fill_manual(values= colour.table.res.ab$Colour) +
theme(legend.position = "none", axis.title = element_text(face= "bold", size= 20), axis.text.x = element_text(size= 18), axis.text.y = element_text(size= 18))
Res5.final
Private.GS <-ggarrange(Res5.final, Inst5.final,
labels = c("A", "B"), font.label = list(size= 18), hjust = -1, vjust= 1.2)
Private.GS
Private.GS <-ggarrange(Res5.final, Inst5.final,
labels = c("Private Yards", "Institutions"), font.label = list(size= 18), hjust = -1, vjust= 1.2)
Private.GS
colour.table.res.ab<- tibble(
GS.Type= c("ACNE", "ACPL",  "GLTR", "SYVU", "THOC"),
Colour= c( "seagreen","skyblue", "seagreen", "skyblue", "lightpink"))
Res5<- ggplot(data= top.5.res,
mapping = aes(x= reorder(Var1, -per.abund), y= per.abund, fill= Var1))
Res5.final<-Res5 + geom_col(alpha= 0.7, width = 0.7)+ theme_classic()+
abundance.labs + scale_fill_manual(values= colour.table.res.ab$Colour) +
theme(legend.position = "none", axis.title = element_text(face= "bold", size= 20), axis.text.x = element_text(size= 18), axis.text.y = element_text(size= 18))
Res5.final
Private.GS <-ggarrange(Res5.final, Inst5.final,
labels = c("Private Yards", "Institutions"), font.label = list(size= 18), hjust = -1, vjust= 1.2)
Private.GS
Private.GS <-ggarrange(Res5.final, Inst5.final,
labels = c("Private Yards", "Institutions"), font.label = list(size= 18), hjust = -1, vjust= 1.5)
Private.GS
top.5.alley
colour.table.alley.ab<- tibble(
GS.Type= c("ACNE", "PRVI", "THOC", "ULAM", "ULPU"),
Colour= c("seagreen", "lightpink","lightpink", "lightpink", "skyblue"))
Alley5<- ggplot(data= top.5.alley,
mapping = aes(x= reorder(Var1, -per.abund), y= per.abund, fill= Var1))
Alley5.final<-Alley5 + geom_col(alpha= 0.7, width = 0.7)+ theme_classic()+
abundance.labs + scale_fill_manual(values= colour.table.alley.ab$Colour) +
theme(legend.position = "none", axis.title = element_text(face= "bold", size= 20), axis.text.x = element_text(size= 18), axis.text.y = element_text(size= 18))
Alley5.final
top.5.street
colour.table.street.ab<- tibble(
GS.Type= c("ACPL", "ACSA",  "GLTR", "GYDI","ULMO"),
Colour= c("skyblue", "lightpink","seagreen", "seagreen", "skyblue"))
Street5<- ggplot(data= top.5.street,
mapping = aes(x= reorder(Var1, -per.abund), y= per.abund, fill= Var1))
Street5.final<-Street5 + geom_col(alpha= 0.7, width = 0.7)+ theme_classic()+
abundance.labs + scale_fill_manual(values= colour.table.street.ab$Colour) +
theme(legend.position = "none", axis.title = element_text(face= "bold", size= 20), axis.text.x = element_text(size= 18), axis.text.y = element_text(size= 18))
Street5.final
top.5.parc
colour.table.parc.ab<- tibble(
GS.Type= c("ACSA", "GLTR", "MATH", "TIAM","TICO"),
Colour= c("lightpink","seagreen", "skyblue", "lightpink", "skyblue"))
Parc5<- ggplot(data= top.5.parc,
mapping = aes(x= reorder(Var1, -per.abund), y= per.abund, fill= Var1))
Parc5.final<-Parc5 + geom_col(alpha= 0.7, width = 0.7)+ theme_classic()+
abundance.labs + scale_fill_manual(values= colour.table.parc.ab$Colour) +
theme(legend.position = "none", axis.title = element_text(face= "bold", size= 20), axis.text.x = element_text(size= 18), axis.text.y = element_text(size= 18))
Parc5.final
Public.GS <-ggarrange(Street5.final, Alley5.final, Parc5.final, ncol=3,
labels = c("A", "B", "C"), font.label = list(size= 18), hjust = -1, vjust= 1.2)
Public.GS
View(meta)
library(ggplot2)
library(gridExtra)
meta.SLL <- subset(meta, Region=="SLL")
meta.ETF <- subset(meta, Region=="ETF")
meta <- read.csv("output/dawson.meta.analysis.csv")
meta.SLL <- subset(meta, Region=="SLL")
meta.ETF <- subset(meta, Region=="ETF")
SLL <- ggplot(meta.SLL, aes(Site.Type, Proportion_ABUND, fill=Site.Type)) +
geom_boxplot()+
geom_point() +
ggtitle("St Lawrence Lowlands") +
labs(x="Land Use Type", y="Proportion of Native Trees", title="St Lawrence Lowlands")+
theme(legend.position = "none", axis.title = element_text(face= "bold", size= 20), axis.text.x = element_text(size= 18), axis.text.y = element_text(size= 18))
ETF <- ggplot(meta.ETF, aes(Site.Type, Proportion_ABUND, fill=Site.Type)) +
geom_boxplot()+
geom_point() +
ggtitle("St Lawrence Lowlands") +
labs(x="Land Use Type", y="Proportion of Native Trees", title="Eastern Temperate Forest")+
theme( legend.title = element_text(size=14),
legend.text = element_text(size=10), axis.title = element_text(face= "bold", size= 20), axis.text.x = element_text(size= 18), axis.text.y = element_text(size= 18))
ETF
grid.arrange(SLL, ETF, ncol=2)
ggsave("output/Abund_Proportion_Boxplot.png")
ETF <- ggplot(meta.ETF, aes(Site.Type, Proportion_ABUND, fill=Site.Type)) +
geom_boxplot()+
geom_point() +
ggtitle("Eastern Temperate Forest") +
labs(x="Land Use Type", y="Proportion of Native Trees", title="Eastern Temperate Forest")+
theme( legend.title = element_text(size=14),
legend.text = element_text(size=10), axis.title = element_text(face= "bold", size= 20), axis.text.x = element_text(size= 18), axis.text.y = element_text(size= 18))
ETF
grid.arrange(SLL, ETF, ncol=2)
ETF <- ggplot(meta.ETF, aes(Site.Type, Proportion_ABUND, fill=Site.Type)) +
geom_boxplot()+
geom_point() +
ggtitle("Eastern Temperate Forest") +
labs(x="Land Use Type", y="Proportion of Native Trees", title="Eastern Temperate Forest")+
theme( legend.position = "none", axis.title = element_text(face= "bold", size= 20), axis.text.x = element_text(size= 18), axis.text.y = element_text(size= 18))
ETF
grid.arrange(SLL, ETF, ncol=2)
SLL <- ggplot(meta.SLL, aes(Site.Type, Proportion_RICH, fill=Site.Type)) +
geom_boxplot()+
geom_point() +
ggtitle("St Lawrence Lowlands") +
labs(x="Land Use Type", y="Proportion of Native Species", title="St Lawrence Lowlands")+
theme(legend.position="none", axis.title = element_text(face= "bold", size= 20), axis.text.x = element_text(size= 18), axis.text.y = element_text(size= 18))
ETF <- ggplot(meta.ETF, aes(Site.Type, Proportion_RICH, fill=Site.Type)) +
geom_boxplot()+
geom_point() +
ggtitle("St Lawrence Lowlands") +
labs(x="Land Use Type", y="Proportion of Native Species", title="Eastern Temperate Forest")+
theme( legend.position="none",axis.title = element_text(face= "bold", size= 20), axis.text.x = element_text(size= 18), axis.text.y = element_text(size= 18))
ETF
grid.arrange(SLL, ETF, ncol=2)
ggsave("output/Abund_Proportion_Boxplot.png")
#summary stats
meta <- read.csv("output/Dawson.Trees.With.Origin.csv")
str(meta)
meta <- subset(meta, select=-c(X))
#View(meta)
str(Sites)
Sites <- meta[, c(1:6)]
str(Sites)
Sites <- subset(Sites, select=-c(GS.Type))
View(Sites)
Sites <- Sites %>%
distinct()
length(unique(Sites$Site.Code))
#sample size of each land use type
I <- subset(Sites, Site.Type=="I")
I
length(unique(I$Site.Code))
S<- subset(Sites, Site.Type=="S")
length(unique(S$Site.Code))
Y <- subset(Sites, Site.Type=="Y")
length(unique(Y$Site.Code))
A <- subset(Sites, Site.Type=="A")
A
length(unique(A$Site.Code))
P <- subset(Sites, Site.Type=="P")
length(unique(P$Site.Code))
Site.Rich <- read.csv("output/d.prop.rich.site.csv")
str(Site.Rich)
Site.Rich <- dplyr::rename(Site.Rich, "Proportion_RICH"= Proportion)
Site.Rich <- subset(Site.Rich, select = -c(X))
Site.Rich[order(Site.Rich[,'Site.Code']), ]
Meta.Rich <- dplyr::left_join(Sites, Site.Rich)
##for dawson presentation
ETF.Rich <- subset(Site.Rich, Region=="ETF")
sum(ETF.Rich$RICHNESS_NAT)
Dawson.ETF.Rich <- subset(ETF.Rich, Site.Code=="I1")
Dawson.ETF.Rich
#View(Dawson.ETF.Rich)
sum(Dawson.ETF.Rich$RICHNESS_NAT)
SLL.Rich <- subset(Site.Rich, Region=="SLL")
sum(SLL.Rich$RICHNESS_NAT)
Dawson.SLL.Rich <- subset(SLL.Rich, Site.Code=="I1")
#View(Dawson.SLL.Rich)
sum(Dawson.SLL.Rich$RICHNESS_NAT)
Sites.Abund <- read.csv("output/d.prop.abund.tot.csv")
str(Sites.Abund)
Sites.Abund <- dplyr::rename(Sites.Abund, "Proportion_ABUND"= Proportions)
Sites.Abund <- dplyr::rename(Sites.Abund, "Site.Code"=X)
Sites.Abund <- subset(Sites.Abund, select = -c(X.1))
str(Sites.Abund)
Meta.Abund <- dplyr::left_join(Sites, Sites.Abund)
View(Meta.Abund)
##dawson presentation
ETF.Abund <- subset(Sites.Abund, Region=="ETF")
str(ETF.Abund)
sum(ETF.Abund$ABUNDANCE_NAT)
Dawson.ETF.Abund <- subset(ETF.Abund, Site.Code=="I1")
sum(Dawson.ETF.Abund$ABUNDANCE_NAT)
SLL.Abund <- subset(Sites.Abund, Region=="SLL")
SLL.Abund
Dawson.SLL.Abund <- subset(SLL.Abund, Site.Code=="I1")
sum(Dawson.SLL.Abund$ABUNDANCE_NAT)
Meta.Final <- merge(Meta.Abund, Meta.Rich)
View(Meta.Final)
Meta.Final <- Meta.Final %>%
distinct()
write.csv(Meta.Final, "output/dawson.meta.analysis.csv")
#View(Meta.Rich)
head(Meta.Rich)
str(Meta.Rich)
hist(Meta.Rich$Proportion_RICH)
sum(Meta.Rich$Proportion_RICH==0)
sum(Meta.Rich$Proportion_RICH==1)
glm.b.d.r<- glm(Proportion_RICH~Site.Type*Region, family=binomial(link="logit"), data=Meta.Rich, weights = RICHNESS)
car::vif(glm.b.d.r)
summary(glm.b.d.r)
Anova(glm.b.d.r)
Anova(glm.b.d.r)
car::Anova(glm.b.d.r)
View(Inst5.final)
PseudoR2(glm.b.d.a, which="Nagelkerke")
library(tidyverse)
library(car)
library(emmeans)
library(lmtest)
library(DescTools)
#summary stats
meta <- read.csv("output/Dawson.Trees.With.Origin.csv")
str(meta)
meta <- subset(meta, select=-c(X))
#View(meta)
str(Sites)
Sites <- meta[, c(1:6)]
str(Sites)
Sites <- subset(Sites, select=-c(GS.Type))
View(Sites)
Sites <- Sites %>%
distinct()
length(unique(Sites$Site.Code))
#sample size of each land use type
I <- subset(Sites, Site.Type=="I")
I
length(unique(I$Site.Code))
S<- subset(Sites, Site.Type=="S")
length(unique(S$Site.Code))
Y <- subset(Sites, Site.Type=="Y")
length(unique(Y$Site.Code))
A <- subset(Sites, Site.Type=="A")
A
length(unique(A$Site.Code))
P <- subset(Sites, Site.Type=="P")
length(unique(P$Site.Code))
Site.Rich <- read.csv("output/d.prop.rich.site.csv")
str(Site.Rich)
Site.Rich <- dplyr::rename(Site.Rich, "Proportion_RICH"= Proportion)
Site.Rich <- subset(Site.Rich, select = -c(X))
Site.Rich[order(Site.Rich[,'Site.Code']), ]
Meta.Rich <- dplyr::left_join(Sites, Site.Rich)
##for dawson presentation
ETF.Rich <- subset(Site.Rich, Region=="ETF")
sum(ETF.Rich$RICHNESS_NAT)
Dawson.ETF.Rich <- subset(ETF.Rich, Site.Code=="I1")
Dawson.ETF.Rich
#View(Dawson.ETF.Rich)
sum(Dawson.ETF.Rich$RICHNESS_NAT)
SLL.Rich <- subset(Site.Rich, Region=="SLL")
sum(SLL.Rich$RICHNESS_NAT)
Dawson.SLL.Rich <- subset(SLL.Rich, Site.Code=="I1")
#View(Dawson.SLL.Rich)
sum(Dawson.SLL.Rich$RICHNESS_NAT)
Sites.Abund <- read.csv("output/d.prop.abund.tot.csv")
str(Sites.Abund)
Sites.Abund <- dplyr::rename(Sites.Abund, "Proportion_ABUND"= Proportions)
Sites.Abund <- dplyr::rename(Sites.Abund, "Site.Code"=X)
Sites.Abund <- subset(Sites.Abund, select = -c(X.1))
str(Sites.Abund)
Meta.Abund <- dplyr::left_join(Sites, Sites.Abund)
View(Meta.Abund)
##dawson presentation
ETF.Abund <- subset(Sites.Abund, Region=="ETF")
str(ETF.Abund)
sum(ETF.Abund$ABUNDANCE_NAT)
Dawson.ETF.Abund <- subset(ETF.Abund, Site.Code=="I1")
sum(Dawson.ETF.Abund$ABUNDANCE_NAT)
SLL.Abund <- subset(Sites.Abund, Region=="SLL")
SLL.Abund
Dawson.SLL.Abund <- subset(SLL.Abund, Site.Code=="I1")
sum(Dawson.SLL.Abund$ABUNDANCE_NAT)
Meta.Final <- merge(Meta.Abund, Meta.Rich)
View(Meta.Final)
Meta.Final <- Meta.Final %>%
distinct()
write.csv(Meta.Final, "output/dawson.meta.analysis.csv")
#View(Meta.Rich)
head(Meta.Rich)
str(Meta.Rich)
hist(Meta.Rich$Proportion_RICH)
sum(Meta.Rich$Proportion_RICH==0)
sum(Meta.Rich$Proportion_RICH==1)
#richness model
glm.b.d.r<- glm(Proportion_RICH~Site.Type*Region, family=binomial(link="logit"), data=Meta.Rich, weights = RICHNESS)
car::vif(glm.b.d.r)
summary(glm.b.d.r)
car::Anova(glm.b.d.r)
##Assumptions
plot(glm.b.d.r)
qqline(residuals(glm.b.richness))
#homogeneity
bptest(glm.b.richness)
#pairwise comparisons
lsmeans(glm.b.d.r, pairwise ~ Site.Type | Region , adjust="Tukey")
PseudoR2(glm.b.d.r, which = "Nagelkerke")
#abundance model
aov.abundance <- aov(Proportion_ABUND~Site.Type*Region, data=Meta.Abund)
anova(aov.abundance)
plot(aov.abundance)
glm.b.d.a <- glm(Proportion_ABUND~Site.Type*Region, family=binomial, data=Meta.Abund, weights = ABUNDANCE_TOT)
library(rsq)
summary(glm.b.d.a)
car::Anova(glm.b.d.a)
print(Anova(glm.b.d.a))
##Assumptions
plot(glm.b.d.a)
PseudoR2(glm.b.d.a, which="Nagelkerke")
car::Anova(glm.b.d.a)
glm.b.d.a <- glm(Proportion_ABUND~Site.Type+Region, family=binomial, data=Meta.Abund, weights = ABUNDANCE_TOT)
summary(glm.b.d.a)
car::Anova(glm.b.d.a)
PseudoR2(glm.b.d.a, which="Nagelkerke")
#pairwise comparisons
lsmeans(glm.b.d.a, pairwise ~ Site.Type | Region , adjust="Tukey")
glm.b.d.r<- glm(Proportion_RICH~Site.Type*Region, family=binomial(link="logit"), data=Meta.Rich, weights = RICHNESS)
car::vif(glm.b.d.r)
summary(glm.b.d.r)
car::Anova(glm.b.d.r)
glm.b.d.r<- glm(Proportion_RICH~Site.Type+Region, family=binomial(link="logit"), data=Meta.Rich, weights = RICHNESS)
car::vif(glm.b.d.r)
summary(glm.b.d.r)
car::Anova(glm.b.d.r)
PseudoR2(glm.b.d.r, which = "Nagelkerke")
#pairwise comparisons
lsmeans(glm.b.d.r, pairwise ~ Site.Type | Region , adjust="Tukey")
