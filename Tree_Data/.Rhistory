mutate(Species.Code=recode(Species.Code, CG="CR")) %>%
mutate(Species.Code=recode(Species.Code, LOPER="LOPE")) %>%
mutate(Species.Code=recode(Species.Code, EU="LOPE")) %>%
mutate(Species.Code=recode(Species.Code, HOLONICERALONICERAEU="LOPE")) %>%
mutate(Species.Code=recode(Species.Code, ST="MAST")) %>%
mutate(Species.Code=recode(Species.Code, WE="WEFL")) %>%
mutate(Species_Common=recode(Species_Common, Wygeria ="Weigela Florida"))
#get rid of NA and recode
meta.data <- meta.data %>%
drop_na(Site.Code) %>%
distinct() %>%
mutate(Species.Code=recode(Species.Code, CG="CR")) %>%
mutate(Species.Code=recode(Species.Code, LOPER="LOPE")) %>%
mutate(Species.Code=recode(Species.Code, EU="LOPE")) %>%
mutate(Species.Code=recode(Species.Code, HOLONICERALONICERAEU="LOPE")) %>%
mutate(Species.Code=recode(Species.Code, ST="MAST")) %>%
mutate(Species.Code=recode(Species.Code, WE="WEFL")) %>%
mutate(Species_Common=recode(Species_Common, Wygeria ="Weigela Florida"))
meta.data$Cultivar.Code <- meta.data$Species.Code)
meta.data$Cultivar.Code <- meta.data$Species.Code
meta.data <- read.csv("metadata.csv", na.strings="")
View(meta.data)
str(meta.data)
unique(meta.data$Species_Common)
#get rid of NA and recode
meta.data <- meta.data %>%
drop_na(Site.Code) %>%
distinct() %>%
mutate(Species.Code=recode(Species.Code, CG="CR")) %>%
mutate(Species.Code=recode(Species.Code, LOPER="LOPE")) %>%
mutate(Species.Code=recode(Species.Code, EU="LOPE")) %>%
mutate(Species.Code=recode(Species.Code, HOLONICERALONICERAEU="LOPE")) %>%
mutate(Species.Code=recode(Species.Code, ST="MAST")) %>%
mutate(Species.Code=recode(Species.Code, WE="WEFL")) %>%
mutate(Species_Common=recode(Species_Common, Wygeria ="Weigela Florida"))
meta.data$Cultivar.Code <- meta.data$Species.Code
meta.data$Genus.Code <- substr(meta.data$Species.Code, 1,2)
meta.data$Site.Type <- substr(meta.data$Site.Code, 1,1)
meta.data <- meta.data %>%
mutate(Species.Code = str_remove(Species.Code, "[XX]")) %>%
mutate(Species.Code = str_remove(Species.Code, "[X]") %>%
mutate(Species.Code = substring(Species.Code, 1,4)) %>%
distinct()
str(meta.data)
str(meta.data)
View(meta.data)
meta.data <- meta.data %>%
library(magrittr)
library(magrittr)
meta.data <- read.csv("metadata.csv", na.strings="")
View(meta.data)
str(meta.data)
#get rid of NA and recode
meta.data <- meta.data %>%
drop_na(Site.Code) %>%
distinct() %>%
mutate(Species.Code=recode(Species.Code, CG="CR")) %>%
mutate(Species.Code=recode(Species.Code, LOPER="LOPE")) %>%
mutate(Species.Code=recode(Species.Code, EU="LOPE")) %>%
mutate(Species.Code=recode(Species.Code, HOLONICERALONICERAEU="LOPE")) %>%
mutate(Species.Code=recode(Species.Code, ST="MAST")) %>%
mutate(Species.Code=recode(Species.Code, WE="WEFL")) %>%
mutate(Species_Common=recode(Species_Common, Wygeria ="Weigela Florida"))
meta.data$Cultivar.Code <- meta.data$Species.Code
meta.data$Genus.Code <- substr(meta.data$Species.Code, 1,2)
meta.data$Site.Type <- substr(meta.data$Site.Code, 1,1)
meta.data <- meta.data %>%
meta.data <- meta.data %>%
mutate(Species.Code = str_remove(Species.Code, "[XX]"))
meta.data <- meta.data %>%
mutate(Species.Code = str_remove(Species.Code, "[XX]"))
mutate(Species.Code = str_remove(Species.Code, "[X]")
meta.data <- meta.data %>%
meta.data <- meta.data %>%
meta.data <- meta.data %>%
meta.data <- meta.data %>%
mutate(Species.Code = str_remove(Species.Code, "[XX]"))
meta.data <- meta.data %>%
mutate(Species.Code = str_remove(Species.Code, "[XX]"))
View(meta.data)
unique(meta.data$Species.Code)
unique(meta.data$Cultivar.Code)
meta.data <- meta.data %>%
mutate(Species.Code = str_remove(Species.Code, "[XX]")) %>%
mutate(Species.Code = substring(Species.Code, 1,4))
unique(meta.data$Cultivar.Code)
unique(meta.data$Species.Code)
meta.data <- meta.data %>%
mutate(Species.Code = str_remove(Species.Code, "[XX]")) %>%
mutate(Species.Code = substring(Species.Code, 1,4))
unique(meta.data$Species.Code)
length(unique(meta.data$Species.Code))
Dawson <- meta.data[,c(6:7, 21, 10, 20, 12, 19, 14, 11)]
View(Dawson)
str(Dawson)
Dawson$Cultivar.Code <- as.factor(Dawson$Cultivar.Code)
Dawson.species <- distinct(Dawson, Cultivar.Code, .keep_all=TRUE)
View(Dawson.species)
spp.key <- read.csv("input/MasterSppKey_KatiePhilp490_28-1-2021.csv")
Dawson.key <- Dawson.species %>% left_join(spp.key)
View(Dawson)
View(Dawson.key)
Dawson.key <- Dawson.species %>% left_join(spp.key, by=Cultivar.Code)
str(spp.key)
Dawson.key <- Dawson.species %>% left_join(spp.key, by=Cultivar.Code)
str(Dawson.species)
str(spp.key)
str(Dawson)
str(Dawson.species)
Dawson.species <- distinct(Dawson, Cultivar.Code)
View(Dawson.species)
Dawson.key <- Dawson.species %>% left_join(spp.key, by=Cultivar.Code)
Dawson.key <- Dawson.species %>% left_join(spp.key)
View(Dawson.key)
Dawson.species <- distinct(Dawson, Cultivar.Code, .keep_all = )
Dawson.species <- distinct(Dawson, Cultivar.Code, .keep_all = TRUE)
View(Dawson.species)
str(Dawson.species)
Dawson.species <_ Dawson.species[5:8]
Dawson.species <- Dawson.species[,5:8]
View(Dawson.species)
Dawson.key <- Dawson.species %>% left_join(spp.key)
View(Dawson.key)
master.key <- left_join(Dawson, spp.key, by= Cultivar.Code)
str(Dawson.species)
master.key <- left_join(Dawson.species, spp.key, by= Cultivar.Code)
master.key <- left_join(Dawson.species, spp.key, by= Species.Code)
master.key <- left_join(Dawson.species, spp.key, by= Dawson.species$Species.Code)
master.key <- left_join(Dawson.species, spp.key)
Dawson.key <- Dawson.species %>% left_join(spp.key, by=Cultivar.Code
Dawson.key <- Dawson.species %>% left_join(spp.key, by=Cultivar.Code)
Dawson.key <- Dawson.species %>% left_join(spp.key, by=Cultivar.Code)
Dawson.key <- Dawson.species %>% left_join(spp.key, by=Cultivar.code)
str(spp.key)
str(Dawson.species)
Dawson.key <- Dawson.species %>% left_join(spp.key)
View(Dawson.key)
write.csv("output/Dawson.key.csv")
write.csv(Dawson.key, file="output/Dawson.key.csv")
meta.data <- read.csv("metadata.csv", na.strings="")
#get rid of NA and recode
meta.data <- meta.data %>%
drop_na(Site.Code) %>%
distinct() %>%
mutate(Species.Code=recode(Species.Code, LOPER="LOPE")) %>%
mutate(Species.Code=recode(Species.Code, EU="LOPE")) %>%
mutate(Species.Code=recode(Species.Code, HOLONICERALONICERAEU="LOPE")) %>%
mutate(Species.Code=recode(Species.Code, ST="MAST")) %>%
mutate(Species.Code=recode(Species.Code, WE="WEFL")) %>%
mutate(Species_Common=recode(Species_Common, Wygeria ="Weigela Florida"))
meta.data$Cultivar.Code <- meta.data$Species.Code
meta.data$Genus.Code <- substr(meta.data$Species.Code, 1,2)
meta.data$Site.Type <- substr(meta.data$Site.Code, 1,1)
meta.data <- meta.data %>%
mutate(Species.Code = str_remove(Species.Code, "[XX]")) %>%
mutate(Species.Code = substring(Species.Code, 1,4))
length(unique(meta.data$Species.Code))
Dawson <- meta.data[,c(6:7, 21, 10, 20, 12, 19, 14, 11)]
length(unique(meta.data$Cultivar.Code))
Dawson <- meta.data[,c(6:7, 21, 10, 20, 12, 19, 14, 11)]
Dawson$Cultivar.Code <- as.factor(Dawson$Cultivar.Code)
Dawson.species <- distinct(Dawson, Cultivar.Code, .keep_all = TRUE)
Dawson.species <- Dawson.species[,5:7]
spp.key <- read.csv("input/MasterSppKey_KatiePhilp490_28-1-2021.csv")
Dawson.key <- Dawson.species %>% left_join(spp.key)
View(Dawson.key)
Dawson.key <- Dawson.species %>% left_join(spp.key, by=Species.Code)
Dawson.key <- Dawson.species %>% left_join(spp.key, by="Species.Code")
View(Dawson.key)
Dawson.key <- Dawson.species %>% left_join(spp.key, by="Species.Code")
View(Dawson.key)
Dawson.key <- Dawson.species %>% left_join(spp.key, by= c("Genus.Code","Species.Code", "Cultivar.Code", "Species.Latin")
Dawson.key <- Dawson.species %>% left_join(spp.key, by= c("Genus.Code","Species.Code", "Cultivar.Code", "Species.Latin"))
Dawson.key <- Dawson.species %>% left_join(spp.key, by= c("Genus.Code","Species.Code", "Cultivar.Code", "Species.Latin"))
str(Dawson.species)
Dawson.key <- Dawson.species %>% left_join(spp.key, by= c("Genus.Code","Species.Code", "Cultivar.Code"))
View(Dawson.key)
spp.key <- read.csv("input/MasterSppKey_KatiePhilp490_28-1-2021.csv")
str(spp.key)
Dawson.key <- Dawson.species %>% left_join(spp.key, by= c("Genus.Code","Species.Code", "Cultivar.Code"))
View(Dawson.key)
meta.data <- meta.data %>%
mutate(Species.Code = str_remove(Species.Code, "[XX]")) %>%
mutate(Species.Code = str_remove(Species.Code, "[X]")) %>%
mutate(Species.Code = substring(Species.Code, 1,4))
length(unique(meta.data$Cultivar.Code))
meta.data <- read.csv("metadata.csv", na.strings="")
View(meta.data)
str(meta.data)
#get rid of NA and recode
meta.data <- meta.data %>%
drop_na(Site.Code) %>%
distinct() %>%
mutate(Species.Code=recode(Species.Code, LOPER="LOPE")) %>%
mutate(Species.Code=recode(Species.Code, EU="LOPE")) %>%
mutate(Species.Code=recode(Species.Code, HOLONICERALONICERAEU="LOPE")) %>%
mutate(Species.Code=recode(Species.Code, ST="MAST")) %>%
mutate(Species.Code=recode(Species.Code, WE="WEFL")) %>%
mutate(Species_Common=recode(Species_Common, Wygeria ="Weigela Florida"))
meta.data$Cultivar.Code <- meta.data$Species.Code
meta.data$Genus.Code <- substr(meta.data$Species.Code, 1,2)
meta.data$Site.Type <- substr(meta.data$Site.Code, 1,1)
meta.data <- meta.data %>%
mutate(Species.Code = str_remove(Species.Code, "[XX]")) %>%
mutate(Species.Code = str_remove(Species.Code, "[X]")) %>%
mutate(Species.Code = substring(Species.Code, 1,4))
str(meta.data)
View(meta.data)
length(unique(meta.data$Cultivar.Code))
Dawson <- meta.data[,c(6:7, 21, 10, 20, 12, 19, 14, 11)]
Dawson$Cultivar.Code <- as.factor(Dawson$Cultivar.Code)
Dawson.species <- distinct(Dawson, Cultivar.Code, .keep_all = TRUE)
View(Dawson.species)
Dawson.species <- Dawson.species[,5:7]
Dawson.species <- Dawson.species[,5:8]
Dawson.species <- Dawson.species[,5:8]
Dawson <- meta.data[,c(6:7, 21, 10, 20, 12, 19, 14, 11)]
str(Dawson)
Dawson.species <- distinct(Dawson, Cultivar.Code, .keep_all = TRUE)
Dawson.species <- Dawson.species[,5:8]
str(Dawson.species)
spp.key <- read.csv("input/MasterSppKey_KatiePhilp490_28-1-2021.csv")
Dawson.key <- Dawson.species %>% left_join(spp.key, by= c("Genus.Code","Species.Code", "Cultivar.Code", "Species.Latin"))
View(Dawson.key)
Dawson.key <- Dawson.species %>% left_join(spp.key, by= c("Genus.Code","Species.Code", "Cultivar.Code"))
View(Dawson.key)
Dawson.key <- Dawson.species %>% left_join(spp.key, by= c("Genus.Code","Species.Code"))
View(Dawson.key)
Dawson.key <- Dawson.species %>% left_join(spp.key, by= c("Genus.Code","Species.Code", "Cultivar.Code"))
View(Dawson.key)
write.csv(Dawson.key, file="output/Dawson.key.csv")
Master <- read.csv("output/MASTER.DAWSON.csv")
View(Master)
Dawson.Native <- left_join(Dawson, Master)
View(Dawson.Native)
Dawson.Native <- drop_na(Dawson.Native$Native_SLL)
Master <- read.csv("output/MASTER.DAWSON.csv", na.strings="NA")
View(Master)
Dawson.Native <- left_join(Dawson, Master)
View(Dawson.Native)
Dawson.Native <- drop_na(Dawson.Native$Native_SLL)
Dawson.Native <- Dawson.Native %>%
mutate(Native_SLL =as.factor(Native_SLL))
Dawson.Native <- Dawson.Native %>%
mutate(Native_SLL =as.factor(Native_SLL)) %>%
drop_na(Dawson.Native$Native_SLL)
Dawson.Native <- Dawson.Native %>%
mutate(Native_SLL =as.factor(Native_SLL)) %>%
drop_na(Dawson.Native$Native_SLL)
str(Dawson.Native)
Dawson.Native <- Dawson.Native %>%
mutate(Native_SLL =as.factor(Native_SLL)) %>%
drop_na(Native_SLL)
write.csv(Dawson.Trees.With.Origin, file="output/Dawson.Trees.With.Origin.csv")
write.csv(Dawson.Native, file="output/Dawson.Trees.With.Origin.csv")
Dawson.trees.total <- read.csv("output/Dawson.Trees.With.Origin")
setwd("~/Documents/GitHub/Trees/Tree_Data")
Dawson.trees.total <- read.csv("output/Dawson.Trees.With.Origin.csv")
SLL.Species <- subset(Dawson.trees.total, Native_SLL=='Y', select=c(Site.Type, Site.Code))
View(SLL.Species)
SLL.per.site <- count(SLL.Species, Site.Code, .drop=FALSE)
View(Sll.per.site)
View(SLL.per.site)
length(unique(Dawson.trees.total$Site.Code))
length(unique(Dawson.trees.total$Site.Type))
length(unique(Dawson.trees.total$Site.Code))
SLL.Species <- subset(Dawson.trees.total, Native_SLL=='Y', select=c(Site.Type, Site.Code))
View(SLL.Species)
SLL.per.site <- count(SLL.Species, Site.Code, .drop=FALSE)
View(SLL.per.site)
n.per.site <- Dawson.trees.total %>%
group_by(Site.Code) %>%
add_count(Native_SLL=='Y')
SLL.per.site <- Dawson.trees.total %>%
group_by(Site.Code) %>%
add_count(Native_SLL=='Y')
View(SLL.per.site)
SLL.Species <- subset(Dawson.trees.total, Native_SLL=='Y', select=c(Site.Type, Site.Code))
SLL.per.site <- count(SLL.Species, Site.Code, .drop=FALSE)
View(SLL.per.site)
SLL.Species <- SLL.Species %>%
add_count()
View(SLL.Species)
SLL.Species <- SLL.Species %>%
add_count(Site.Code)
View(SLL.Species)
SLL.Species <- SLL.Species %>%
add_count(Site.Code) %>%
distinct
SLL.Species <- subset(Dawson.trees.total, Native_SLL=='Y', select=c(Site.Type, Site.Code))
SLL.Species <- SLL.Species %>%
add_count(Site.Code) %>%
distinct
SLL.Species <- SLL.Species %>%
add_count(Site.Code) %>%
distinct()
SLL.Species <- subset(Dawson.trees.total, Native_SLL=='Y', select=c(Site.Type, Site.Code))
SLL.Species <- SLL.Species %>%
add_count(Site.Code) %>%
distinct()
View(SLL.Species)
ETF.Species <- ETF.Species %>%
add_count(Site.Code) %>%
distinct()
#ETF subset
ETF.Species <- subset(Dawson.trees.total, Native_ETF=='Y')
ETF.Species <- ETF.Species %>%
add_count(Site.Code) %>%
distinct()
View(ETF.per.site)
View(ETF.Species)
#ETF subset
ETF.Species <- subset(Dawson.trees.total, Native_ETF=='Y',select=c(Site.Type, Site.Code))
ETF.Species <- ETF.Species %>%
add_count(Site.Code) %>%
distinct()
View(ETF.Species)
#Total trees per site
Trees.per.site <- Dawson.trees.total %>%
add_count(Site.Code) %>%
distinct()
View(Trees.per.site)
add_count(Site.Code) %>%
distinct()
#Total trees per site
Trees.per.site <- Dawson.trees.total %>%
select=c(Site.Type, Site.Code)
#Total trees per site
Trees.per.site <- Dawson.trees.total %>%
select=c(Site.Type, Site.Code) %>%
add_count(Site.Code) %>%
distinct()
str(Dawson.trees.total)
#Total trees per site
Trees.per.site <- Dawson.trees.total %>%
select=c(Site.Type, Site.Code) %>%
add_count(Site.Code) %>%
distinct()
View(Trees.per.site)
str(Dawson.trees.total)
#Total trees per site
Trees.per.site <- Dawson.trees.total[,4:4] %>%
select=c(Site.Type, Site.Code) %>%
add_count(Site.Code) %>%
distinct()
#Total trees per site
Trees.per.site <- Dawson.trees.total[,4:5] %>%
select=c(Site.Type, Site.Code) %>%
add_count(Site.Code) %>%
distinct()
#Total trees per site
Trees.per.site <- Dawson.trees.total[,4:5] %>%
add_count(Site.Code) %>%
distinct()
View(Trees.per.site)
SLL.Species$Region <- SLL
SLL.Species$Region <- "SLL"
View(SLL.Species)
ETF.Species$Region <- "ETF"
#Total trees per site
Trees.per.site <- Dawson.trees.total[,4:5] %>%
add_count(Site.Code) %>%
distinct()
Native.proportions <- left_join(Trees.per.site, SLL.Species)
View(Native.proportions)
View(ETF.Species)
ETF.Species <- ETF.Species %>%
add_count(Site.Code) %>%
distinct() %>%
rename(n=="SPP.Per.Site")
ETF.Species <- ETF.Species %>%
add_count(Site.Code) %>%
distinct() %>%
rename(n="SPP.Per.Site")
#ETF subset
ETF.Species <- subset(Dawson.trees.total, Native_ETF=='Y',select=c(Site.Type, Site.Code))
ETF.Species <- ETF.Species %>%
add_count(Site.Code) %>%
distinct() %>%
rename(n="ETF.Per.Site")
ETF.Species <- ETF.Species %>%
add_count(Site.Code) %>%
distinct() %>%
rename("ETF.Per.Site"=n)
View(ETF.Species)
ETF.Species$Region <- "ETF"
View(ETF.Species)
SLL.Species <- subset(Dawson.trees.total, Native_SLL=='Y', select=c(Site.Type, Site.Code))
SLL.Species <- SLL.Species %>%
add_count(Site.Code) %>%
distinct() %>%
rename("no.Per.Site"=n)
SLL.Species$Region <- "SLL"
View(SLL.Species)
SLL.Species <- subset(Dawson.trees.total, Native_SLL=='Y', select=c(Site.Type, Site.Code))
View(SLL.Species)
SLL.Species <- SLL.Species %>%
add_count(Site.Code) %>%
distinct() %>%
rename("no.per.site"=n)
SLL.Species$Region <- "SLL"
View(SLL.Species)
#ETF subset
ETF.Species <- subset(Dawson.trees.total, Native_ETF=='Y',select=c(Site.Type, Site.Code))
ETF.Species <- ETF.Species %>%
add_count(Site.Code) %>%
distinct() %>%
rename("no.per.site"=n)
ETF.Species$Region <- "ETF"
View(ETF.Species)
Native.proportions <- left_join(Trees.per.site, SLL.Species)
View(Native.proportions)
#Total trees per site
Trees.per.site <- Dawson.trees.total[,4:5] %>%
add_count(Site.Code) %>%
distinct() %>%
rename("total.per.site"=n)
View(Trees.per.site)
Native.proportions <- left_join(Trees.per.site, SLL.Species)
View(Native.proportions)
Native.proportions <- left_join(Trees.per.site, SLL.Species, ETF.Species)
Native.proportions <- left_join(Trees.per.site, SLL.Species)
Native.proportions
Native.proportions <- Native.proportions %>%
mutate(no.per.site=recode(NA="0"))
Native.proportions[is.na(Native.proportions)] <- 0
View(Native.proportions)
Native.proportions <- left_join(Trees.per.site, SLL.Species)
Native.proportions[is.na(Native.proportions$no.per.site)] <- 0
Native.proportions <- left_join(Trees.per.site, SLL.Species)
Native.proportions[is.na(Native.proportions$no.per.site)] <- 0
Native.proportions[is.na(Native.proportions)] <- 0
View(Native.proportions)
str(Native.proportions)
Native.proportions$Proportion.SLL <- no.per.site/total.per.site
Native.proportions$Proportion.SLL <- Native.proportions$no.per.site/Native.proportions$total.per.site
View(Native.proportions)
SLL.Species <- subset(Dawson.trees.total, Native_SLL=='Y', select=c(Site.Type, Site.Code))
View(SLL.Species)
SLL.Species <- subset(Dawson.trees.total, Native_SLL=='Y', select=c(Site.Type, Site.Code))
SLL.Species <- SLL.Species %>%
add_count(Site.Code) %>%
distinct() %>%
rename("SLL.per.site"=n)
SLL.Species$Region <- "SLL"
View(SLL.Species)
#ETF subset
ETF.Species <- subset(Dawson.trees.total, Native_ETF=='Y',select=c(Site.Type, Site.Code))
ETF.Species <- ETF.Species %>%
add_count(Site.Code) %>%
distinct() %>%
rename("ETF.per.site"=n)
ETF.Species$Region <- "ETF"
View(ETF.Species)
#Total trees per site
Trees.per.site <- Dawson.trees.total[,4:5] %>%
add_count(Site.Code) %>%
distinct() %>%
rename("total.per.site"=n)
View(Trees.per.site)
Native.proportions <- left_join(Trees.per.site, SLL.Species)
Native.proportions[is.na(Native.proportions)] <- 0
ETF.proportions <- left_join(Trees.per.site, ETF.Species)
ETF.proportions[is.na(ETF.proportions)] <-0
SLL.proportions$Proportion <- SLL.proportions$no.per.site/SLL.proportions$total.per.site
ETF.proportions$Proportion <- ETF.proportions$ETF.per.site/ETF.proportions$total.per.site
SLL.proportions <- left_join(Trees.per.site, SLL.Species)
SLL.proportions[is.na(SLL.proportions)] <- 0
SLL.proportions$Proportion <- SLL.proportions$SLL.per.site/SLL.proportions$total.per.site
ETF.proportions <- left_join(Trees.per.site, ETF.Species)
ETF.proportions[is.na(ETF.proportions)] <-0
ETF.proportions$Proportion <- ETF.proportions$ETF.per.site/ETF.proportions$total.per.site
Dawson.proportions <- merge(SLL.proportions, ETF.proportions)
View(Dawson.proportions)
Dawson.proportions <- merge(SLL.proportions, ETF.proportions, all-TRUE)
Dawson.proportions <- merge(SLL.proportions, ETF.proportions, all=TRUE)
View(Dawson.proportions)
View(Dawson.proportions)
Dawson.proportions <- merge(SLL.proportions, ETF.proportions)
View(Dawson.proportions)
Dawson.proportions <- merge(SLL.proportions, ETF.proportions, all=TRUE)
View(Dawson.proportions)
str(Dawson.proportions)
glm.abundace <- glm(Proportion~ Site.Type*Region,weights=total.per.site)
glm.abundace <- glm(Proportion~ Site.Type*Region,weights=total.per.site, Dawson.proportions)
glm.abundace <- glm(Proportion~ Site.Type*Region,weights=total.per.site, family=binomial, Dawson.proportions)
anova(glm.abundace)
Anova(glm.abundance)
install.packages("car")
library(car)
Anova(glm.abundance)
glm.abundace <- glm(Proportion~ Site.Type*Region,weights=total.per.site, family=binomial, Dawson.proportions)
anova(glm.abundace)
Anova(glm.abundance)
glm.abundance <- glm(Proportion~ Site.Type*Region,weights=total.per.site, family=binomial, Dawson.proportions)
anova(glm.abundance)
Anova(glm.abundance)
summary.aov(glm.abundance)
summary(glm.abundance)
glm.abundance <- glm(Proportion~ Site.Type+Region,weights=total.per.site, family=binomial, Dawson.proportions)
anova(glm.abundance)
Anova(glm.abundance)
summary(glm.abundance)
install.packagesa("emmeans")
install.packagesa("emeans")
install.packagesa("emmeans")
install.packages("emmeans")
library(emmeans)
lsmeans(glm.abundance, pairwise~Site.Type|Region, adjust=Tukey)
library(emmeans)
install.packages("emmeans")
library(emmeans)
